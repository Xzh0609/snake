<!DOCTYPE html>
<html>
<head>
  <title>贪吃蛇小游戏</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }

    #game-board {
      width: 300px;
      height: 300px;
      border: 1px solid #000;
      position: relative;
    }

    .snake {
      width: 10px;
      height: 10px;
      background-color: green;
      position: absolute;
    }

    .food {
      width: 10px;
      height: 10px;
      background-color: red;
      position: absolute;
    }
  </style>
</head>
<body>
  <h1>贪吃蛇小游戏</h1>
  <div id="game-board"></div>

  <script>
    // 游戏逻辑
    const board = document.getElementById('game-board');
    const cellSize = 10;
    const gridSize = 30;
    let snake = [{ x: 15, y: 15 }];
    let food = { x: 10, y: 10 };
    let direction = 'right';

    function drawSnake() {
      board.innerHTML = '';
      snake.forEach((segment) => {
        const snakeElement = document.createElement('div');
        snakeElement.classList.add('snake');
        snakeElement.style.left = `${segment.x * cellSize}px`;
        snakeElement.style.top = `${segment.y * cellSize}px`;
        board.appendChild(snakeElement);
      });
    }

    function drawFood() {
      const foodElement = document.createElement('div');
      foodElement.classList.add('food');
      foodElement.style.left = `${food.x * cellSize}px`;
      foodElement.style.top = `${food.y * cellSize}px`;
      board.appendChild(foodElement);
    }

    function moveSnake() {
      const head = { ...snake[0] };
      switch (direction) {
        case 'up':
          head.y -= 1;
          break;
        case 'down':
          head.y += 1;
          break;
        case 'left':
          head.x -= 1;
          break;
        case 'right':
          head.x += 1;
          break;
      }
      snake.unshift(head);

      if (head.x === food.x && head.y === food.y) {
        // 吃到食物，增加蛇的长度并生成新的食物
        snake.push({});
        generateFood();
      } else {
        snake.pop();
      }

      checkCollision();
    }

    function generateFood() {
      food.x = Math.floor(Math.random() * gridSize);
      food.y = Math.floor(Math.random() * gridSize);
    }

    function checkCollision() {
      const head = snake[0];
      if (
        head.x < 0 || head.x >= gridSize ||
        head.y < 0 || head.y >= gridSize ||
        snake.slice(1).some((segment) => segment.x === head.x && segment.y === head.y)
      ) {
        clearInterval(gameLoop);
        alert('游戏结束！');
      }
    }

    function handleKeyPress(event) {
      switch (event.key) {
        case 'ArrowUp':
          direction = 'up';
          break;
        case 'ArrowDown':
          direction = 'down';
          break;
        case 'ArrowLeft':
          direction = 'left';
          break;
        case 'ArrowRight':
          direction = 'right';
          break;
      }
    }

    document.addEventListener('keydown', handleKeyPress);

    generateFood();

    const gameLoop = setInterval(() => {
      moveSnake();
      drawSnake();
      drawFood();
    }, 200); // 控制蛇的移动速度

  </script>
</body>
</html>
